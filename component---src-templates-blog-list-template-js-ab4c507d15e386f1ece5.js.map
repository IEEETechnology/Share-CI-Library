{"version":3,"sources":["webpack:///./src/components/Pagination.js","webpack:///./src/templates/blog-list-template.js","webpack:///./src/components/Hero.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js"],"names":["PaginationWrapper","styled","nav","withConfig","displayName","componentId","PageBtn","gatsby_browser_entry","colors","primary","textLightest","PreviousBtn","NextBtn","Spacer","span","PageInfo","components_Pagination","render","_this$props","this","props","currentPage","nbPages","previousUrl","react_default","a","createElement","to","className","React","Component","BlogList","_this$props$data$site","data","site","siteMetadata","title","description","posts","edges","pageContext","layout","location","SEO","Hero","subTitle","Wrapper","PostsList","pageQuery","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_2__","_hooks_use_site_config__WEBPACK_IMPORTED_MODULE_3__","_hooks_use_site_images__WEBPACK_IMPORTED_MODULE_4__","_tokens__WEBPACK_IMPORTED_MODULE_5__","HeroContainer","div","TitleContainer","HeroTitle","h1","white","HeroSubTitle","h2","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","src","style","backgroundImage","ListContainer","textLight","TagListItem","gatsby__WEBPACK_IMPORTED_MODULE_1__","TagList","tags","icon","map","tag","i","key","Post","article","ReadPost","primaryAlpha","PostDate","time","PostHeader","header","Excerpt","p","PostTitleLink","components_PostsListItem","excerpt","slug","date","language","dangerouslySetInnerHTML","__html","aria-label","react","post","Object","assign"],"mappings":"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","file":"component---src-templates-blog-list-template-js-ab4c507d15e386f1ece5.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: ${colors.primary};\n  border: 1px solid ${colors.primary};\n  color: ${colors.textLightest};\n  padding: 8px 20px;\n  min-width: 130px;\n\n  &:hover {\n    background-color: ${colors.textLightest};\n    color: ${colors.primary};\n    border: 1px solid ${colors.primary};\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nclass Pagination extends React.Component {\n  render() {\n    const { currentPage, nbPages } = this.props\n    const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n    return (\n      <PaginationWrapper>\n        {currentPage !== 1 ? (\n          <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n        ) : (\n          <Spacer className=\"previous\" />\n        )}\n\n        <PageInfo>\n          Page {currentPage} of {nbPages}\n        </PageInfo>\n\n        {currentPage < nbPages ? (\n          <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n        ) : (\n          <Spacer className=\"next\" />\n        )}\n      </PaginationWrapper>\n    )\n  }\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\n\nclass BlogList extends React.Component {\n  render() {\n    const { title, description } = this.props.data.site.siteMetadata\n    const posts = this.props.data.posts.edges\n    const { pageContext } = this.props\n\n    return (\n      <Layout location={this.props.location}>\n        <SEO />\n        <Hero title={title} subTitle={description} />\n\n        <Wrapper>\n          <PostsList posts={posts} />\n        </Wrapper>\n\n        <Pagination\n          nbPages={pageContext.nbPages}\n          currentPage={pageContext.currentPage}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"//content/posts//\" } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { withPrefix } from 'gatsby'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\nimport { colors } from '../tokens'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst ListContainer = styled.div`\n  display: inline;\n  margin: 0 0.5rem 0 0;\n  color: ${colors.textLight};\n`\n\nconst TagListItem = styled(Link)`\n  margin-left: 0.3rem;\n  color: ${colors.textLight};\n\n  &:hover {\n    border-bottom: 1px dotted ${colors.textLight};\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, icon } = this.props\n\n    return (\n      <ListContainer>\n        {icon === true && <Fragment>🏷 </Fragment>}\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\nexport default TagList\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n// import Flag from \"./Flag/Flag\";\nimport TagList from \"./TagList\";\n// import useSiteMetadata from \"../hooks/use-site-config\";\nimport styled from \"styled-components\";\nimport { colors } from \"../tokens\";\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`;\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: ${colors.primary};\n\n  &:hover {\n    background-color: ${colors.primaryAlpha};\n    border-radius: 0.25rem;\n    color: ${colors.textLightest};\n  }\n`;\n\nconst PostDate = styled.time`\n  color: ${colors.textLight};\n  &:before {\n    content: \"🗓\";\n    margin-right: 0.2rem;\n  }\n`;\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`;\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`;\n\nconst PostTitleLink = styled(Link)`\n  color: ${colors.primary};\n  &:hover {\n    border-bottom: 1px dotted ${colors.primary};\n  }\n`;\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, date, language, tags } = props;\n  // const { multilangPosts } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {multilangPosts && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n      <footer>\n        <TagList tags={tags} icon={true} />\n        <PostDate>{date}</PostDate>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post ›\n        </ReadPost>\n      </footer>\n    </Post>\n  );\n};\nexport default PostsListItem;\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\n\nclass PostsList extends React.Component {\n  render() {\n    const { posts } = this.props\n\n    return (\n      <Fragment>\n        {posts.map(post => {\n          const props = {\n            title: post.node.frontmatter.title,\n            excerpt: post.node.excerpt,\n            slug: post.node.frontmatter.slug,\n            date: post.node.frontmatter.date,\n            language: post.node.frontmatter.language || 'fr',\n            tags: post.node.frontmatter.tags || [],\n          }\n          return <PostsListItem key={props.slug} {...props} />\n        })}\n      </Fragment>\n    )\n  }\n}\nexport default PostsList\n"],"sourceRoot":""}