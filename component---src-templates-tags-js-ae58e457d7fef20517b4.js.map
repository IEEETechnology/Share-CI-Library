{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/Hero.js","webpack:///./src/components/TagList.js","webpack:///./src/components/PostsListItem.js","webpack:///./src/components/PostsList.js"],"names":["Tags","render","pageTitle","this","props","pageContext","tag","posts","get","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","title","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_Hero__WEBPACK_IMPORTED_MODULE_6__","_components_Wrapper__WEBPACK_IMPORTED_MODULE_4__","_components_PostsList__WEBPACK_IMPORTED_MODULE_3__","React","Component","__webpack_exports__","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","styled_components__WEBPACK_IMPORTED_MODULE_2__","_hooks_use_site_config__WEBPACK_IMPORTED_MODULE_3__","_hooks_use_site_images__WEBPACK_IMPORTED_MODULE_4__","_tokens__WEBPACK_IMPORTED_MODULE_5__","HeroContainer","styled","div","withConfig","displayName","componentId","TitleContainer","HeroTitle","h1","colors","white","HeroSubTitle","h2","siteCover","useSiteMetadata","fluid","useSiteImages","heroImg","src","style","backgroundImage","subTitle","ListContainer","textLight","TagListItem","gatsby__WEBPACK_IMPORTED_MODULE_1__","TagList","_this$props","tags","icon","map","i","key","to","Post","article","ReadPost","gatsby_browser_entry","primary","primaryAlpha","textLightest","PostDate","time","PostHeader","header","Excerpt","p","PostTitleLink","components_PostsListItem","excerpt","slug","date","language","react_default","dangerouslySetInnerHTML","__html","aria-label","PostsList","react","post","Object","assign"],"mappings":"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","file":"component---src-templates-tags-js-ae58e457d7fef20517b4.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout'\nimport PostsList from '../components/PostsList'\nimport Wrapper from '../components/Wrapper'\nimport SEO from '../components/SEO'\nimport Hero from '../components/Hero'\n\nclass Tags extends React.Component {\n  render() {\n    const pageTitle = `#${this.props.pageContext.tag}`\n    const posts = get(this, 'props.data.posts.edges')\n\n    return (\n      <Layout location={this.props.location} title={pageTitle}>\n        <SEO title={pageTitle} />\n        <Hero title={pageTitle} />\n\n        <Wrapper>\n          <h1>Posts tagged as \"{this.props.pageContext.tag}\"</h1>\n          <PostsList posts={posts} />\n        </Wrapper>\n      </Layout>\n    )\n  }\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query PostsByTag($tag: String!) {\n    posts: allMdx(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { eq: $tag } } }\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            date(formatString: \"DD MMMM, YYYY\")\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { withPrefix } from 'gatsby'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\nimport { colors } from '../tokens'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n","import React, { Fragment } from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { colors } from '../tokens'\n\nconst ListContainer = styled.div`\n  display: inline;\n  margin: 0 0.5rem 0 0;\n  color: ${colors.textLight};\n`\n\nconst TagListItem = styled(Link)`\n  margin-left: 0.3rem;\n  color: ${colors.textLight};\n\n  &:hover {\n    border-bottom: 1px dotted ${colors.textLight};\n  }\n  &:before {\n    content: '#';\n  }\n`\n\nclass TagList extends React.Component {\n  render() {\n    const { tags, icon } = this.props\n\n    return (\n      <ListContainer>\n        {icon === true && <Fragment>üè∑ </Fragment>}\n        {tags.map((tag, i) => {\n          return (\n            <Fragment key={`tag-list-${i}`}>\n              <TagListItem to={`/tags/${tag}`}>{tag}</TagListItem>\n              {i < tags.length - 1 ? ', ' : ''}\n            </Fragment>\n          )\n        })}\n      </ListContainer>\n    )\n  }\n}\nexport default TagList\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n// import Flag from \"./Flag/Flag\";\nimport TagList from \"./TagList\";\n// import useSiteMetadata from \"../hooks/use-site-config\";\nimport styled from \"styled-components\";\nimport { colors } from \"../tokens\";\n\nconst Post = styled.article`\n  border-bottom: 1px solid rgba(214, 209, 230, 0.5);\n  padding-bottom: 1.25rem;\n`;\n\nconst ReadPost = styled(Link)`\n  display: block;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n  text-align: center;\n  text-decoration: none;\n  text-transform: uppercase;\n  letter-spacing: 0.05em;\n  line-height: 2;\n  color: ${colors.primary};\n\n  &:hover {\n    background-color: ${colors.primaryAlpha};\n    border-radius: 0.25rem;\n    color: ${colors.textLightest};\n  }\n`;\n\nconst PostDate = styled.time`\n  color: ${colors.textLight};\n  &:before {\n    content: \"üóì\";\n    margin-right: 0.2rem;\n  }\n`;\n\nconst PostHeader = styled.header`\n  padding: 1em 0;\n`;\n\nconst Excerpt = styled.p`\n  line-height: 1.45;\n  padding-bottom: 0.5em;\n`;\n\nconst PostTitleLink = styled(Link)`\n  color: ${colors.primary};\n  &:hover {\n    border-bottom: 1px dotted ${colors.primary};\n  }\n`;\n\nconst PostsListItem = props => {\n  const { title, excerpt, slug, date, language, tags } = props;\n  // const { multilangPosts } = useSiteMetadata()\n\n  return (\n    <Post>\n      <PostHeader>\n        <h2>\n          <PostTitleLink to={`/${slug}`}>\n            {/* {multilangPosts && <Flag language={language} />} */}\n            {title}\n          </PostTitleLink>\n        </h2>\n      </PostHeader>\n      <section>\n        <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n      </section>\n      <footer>\n        <TagList tags={tags} icon={true} />\n        <PostDate>{date}</PostDate>\n        <ReadPost to={`/${slug}`} aria-label={`View ${title} article`}>\n          Read post ‚Ä∫\n        </ReadPost>\n      </footer>\n    </Post>\n  );\n};\nexport default PostsListItem;\n","import React, { Fragment } from 'react'\n\nimport PostsListItem from './PostsListItem'\n\nclass PostsList extends React.Component {\n  render() {\n    const { posts } = this.props\n\n    return (\n      <Fragment>\n        {posts.map(post => {\n          const props = {\n            title: post.node.frontmatter.title,\n            excerpt: post.node.excerpt,\n            slug: post.node.frontmatter.slug,\n            date: post.node.frontmatter.date,\n            language: post.node.frontmatter.language || 'fr',\n            tags: post.node.frontmatter.tags || [],\n          }\n          return <PostsListItem key={props.slug} {...props} />\n        })}\n      </Fragment>\n    )\n  }\n}\nexport default PostsList\n"],"sourceRoot":""}