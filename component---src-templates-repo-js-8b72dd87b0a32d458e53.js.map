{"version":3,"sources":["webpack:///./src/components/Container.js","webpack:///./src/components/Card.js","webpack:///./src/components/Projects/styles.js","webpack:///./src/components/Projects/Projects.js","webpack:///./src/templates/repo.js","webpack:///./src/components/Hero.js"],"names":["Container","styled","div","withConfig","displayName","componentId","Card","Wrapper","Grid","Item","Content","PageHeader","header","components_Projects_Projects","render","projects","this","props","react_default","a","createElement","as","id","map","node","key","title","href","url","target","rel","description","React","Component","__webpack_require__","d","__webpack_exports__","pageQuery","page","layout","location","SEO","excerpt","path","slug","cover","publicURL","Hero","heroImg","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","styled_components__WEBPACK_IMPORTED_MODULE_2__","_hooks_use_site_config__WEBPACK_IMPORTED_MODULE_3__","_hooks_use_site_images__WEBPACK_IMPORTED_MODULE_4__","_tokens__WEBPACK_IMPORTED_MODULE_5__","HeroContainer","TitleContainer","HeroTitle","h1","colors","white","HeroSubTitle","h2","siteCover","useSiteMetadata","fluid","useSiteImages","src","style","backgroundImage","subTitle"],"mappings":"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","file":"component---src-templates-repo-js-8b72dd87b0a32d458e53.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  width: 90%;\n  @media (min-width: 601px) {\n    width: 90%;\n  }\n  @media (min-width: 993px) {\n    width: 80%;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Card = styled.div`\n  padding: 1rem;\n  background: #fff;\n  height: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  padding: 2rem 0;\n`;\n\nexport const Grid = styled.div`\n  display: grid;\n  align-items: center;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: 8fr;\n  gap: 1.2rem 1.2rem;\n\n  @media (max-width: 960px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media (max-width: 680px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nexport const Item = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  box-shadow: 0 1px 6px 0 rgba(0, 0, 0, 0.11);\n\n  h4 {\n    color: #212121;\n  }\n\n  p {\n    color: #707070;\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 1rem 0;\n\n  h4 {\n    margin-bottom: 1rem;\n  }\n`;\n\nexport const Stats = styled.div`\n  display: flex;\n  align-items: center;\n\n  div {\n    display: flex;\n    &:first-child {\n      margin-right: 0.5rem;\n    }\n\n    img {\n      margin: 0;\n    }\n\n    span {\n      color: #000;\n      margin-left: 0.5rem;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"../Container\";\nimport { Card } from \"../Card\";\nimport { Wrapper, Grid, Item, Content, Stats } from \"./styles\";\n\nconst PageHeader = styled.header`\n  padding: 1em 0;\n`;\n\nclass Projects extends React.Component {\n  render() {\n    const { projects } = this.props;\n    return (\n      <Wrapper as={Container} id=\"projects\">\n        <PageHeader>\n          <h2>Projects</h2>\n        </PageHeader>\n        <Grid>\n          {projects.map(node => (\n            <Item\n              key={node.title}\n              as=\"a\"\n              href={node.url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <Card>\n                <Content>\n                  <h4>{node.title}</h4>\n                  <p>{node.description}</p>\n                </Content>\n              </Card>\n            </Item>\n          ))}\n        </Grid>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Projects;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Projects from \"../components/Projects/Projects\";\nimport Wrapper from \"../components/Wrapper\";\nimport Hero from \"../components/Hero\";\nimport SEO from \"../components/SEO\";\n// import Disqus from \"../components/Disqus\";\n\nexport default props => {\n  const page = props.data.page;\n\n  return (\n    <Layout location={props.location}>\n      <SEO\n        title={page.frontmatter.title}\n        description={page.excerpt}\n        path={page.frontmatter.slug}\n        cover={page.frontmatter.cover && page.frontmatter.cover.publicURL}\n      />\n      <Hero\n        heroImg={page.frontmatter.cover && page.frontmatter.cover.publicURL}\n        title={page.frontmatter.title}\n      />\n      <Projects projects={page.frontmatter.projects} />\n\n      {/* {page.frontmatter.disqus && (\n        <Wrapper>\n          <Disqus slug={page.frontmatter.slug} title={page.frontmatter.title} />\n        </Wrapper>\n      )} */}\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    page: mdx(frontmatter: { slug: { eq: $slug } }) {\n      body\n      excerpt\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        disqus\n        cover {\n          publicURL\n        }\n        projects {\n          title\n          description\n          url\n        }\n      }\n    }\n  }\n`;\n","import React from 'react'\nimport { withPrefix } from 'gatsby'\nimport styled from 'styled-components'\nimport useSiteMetadata from '../hooks/use-site-config'\nimport useSiteImages from '../hooks/use-site-images'\nimport { colors } from '../tokens'\n\nconst HeroContainer = styled.div`\n  position: relative;\n  display: table;\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n`\n\nconst TitleContainer = styled.div`\n  display: table-cell;\n  vertical-align: middle;\n  text-align: center;\n  width: 100%;\n`\n\nconst HeroTitle = styled.h1`\n  font-weight: 700;\n  font-size: 3rem;\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst HeroSubTitle = styled.h2`\n  margin: 10px 60px;\n  color: ${colors.white};\n  text-shadow: 1px 1px 4px rgba(34, 34, 34, 0.85);\n`\n\nconst Hero = props => {\n  const { siteCover } = useSiteMetadata()\n  const { fluid } = useSiteImages(siteCover)\n  const heroImg = props.heroImg || fluid.src\n\n  return (\n    <HeroContainer style={{ backgroundImage: `url(\"${heroImg}\")` }}>\n      <TitleContainer>\n        <HeroTitle>{props.title}</HeroTitle>\n        {props.subTitle && <HeroSubTitle>{props.subTitle}</HeroSubTitle>}\n      </TitleContainer>\n    </HeroContainer>\n  )\n}\n\nexport default Hero\n"],"sourceRoot":""}